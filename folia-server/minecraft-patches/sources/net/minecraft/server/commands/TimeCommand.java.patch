--- a/net/minecraft/server/commands/TimeCommand.java
+++ b/net/minecraft/server/commands/TimeCommand.java
@@ -56,6 +_,7 @@
     }
 
     public static int setTime(CommandSourceStack source, int time) {
+        io.papermc.paper.threadedregions.RegionizedServer.getInstance().addTask(() -> { // Folia - region threading
         for (ServerLevel serverLevel : io.papermc.paper.configuration.GlobalConfiguration.get().commands.timeCommandAffectsAllWorlds ? source.getServer().getAllLevels() : java.util.List.of(source.getLevel())) { // CraftBukkit - SPIGOT-6496: Only set the time for the world the command originates in // Paper - add config option for spigot's change
             // serverLevel.setDayTime(time);
             // CraftBukkit start
@@ -69,10 +_,12 @@
 
         source.getServer().forceTimeSynchronization();
         source.sendSuccess(() -> Component.translatable("commands.time.set", time), true);
-        return getDayTime(source.getLevel());
+        }); // Folia - region threading
+        return 0; // Folia - region threading
     }
 
     public static int addTime(CommandSourceStack source, int amount) {
+        io.papermc.paper.threadedregions.RegionizedServer.getInstance().addTask(() -> { // Folia - region threading
         for (ServerLevel serverLevel : io.papermc.paper.configuration.GlobalConfiguration.get().commands.timeCommandAffectsAllWorlds ? source.getServer().getAllLevels() : java.util.List.of(source.getLevel())) { // CraftBukkit - SPIGOT-6496: Only set the time for the world the command originates in // Paper - add config option for spigot's change
             // CraftBukkit start
             org.bukkit.event.world.TimeSkipEvent event = new org.bukkit.event.world.TimeSkipEvent(serverLevel.getWorld(), org.bukkit.event.world.TimeSkipEvent.SkipReason.COMMAND, amount);
@@ -86,6 +_,7 @@
         source.getServer().forceTimeSynchronization();
         int dayTime = getDayTime(source.getLevel());
         source.sendSuccess(() -> Component.translatable("commands.time.set", dayTime), true);
-        return dayTime;
+        }); // Folia - region threading
+        return 0; // Folia - region threading
     }
 }
